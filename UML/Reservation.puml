' @startuml Manage Reservation (GET)

' header Sameple VacQ Sequence Diagram
' footer Page %page% of %lastpage%
' title "Manage Reservations (GET)"

' participant "Client" as client
' participant "<<javaScript>>\n:server" as server
' participant "<<router>>\n:reservations" as routerReservations
' participant "<<controllers>>\n:reservations" as controllersReservations
' participant "<<model>>\n:Reservation" as modelReservation
' database "<<MongoDB>>\n:reservations" as ReservationDatabase

' client->server ++:req.get('/reservations')
' server->routerReservations ++:app.use('/reservations',reservations)
' routerReservations -> controllersReservations ++:getReservations()
' controllersReservations->modelReservation ++:find(req.query)
' modelReservation ->ReservationDatabase ++: ReservationSchema
' ReservationDatabase --> modelReservation --: reservation
' controllersReservations <-- modelReservation --:reservation
' controllersReservations->client --:response

' @enduml



' @startuml Manage Reservation (GET SINGLE)

' header Sameple VacQ Sequence Diagram
' footer Page %page% of %lastpage%
' title "Manage Reservations (GET SINGLE)"

' participant "Client" as client
' participant "<<javaScript>>\n:server" as server
' participant "<<router>>\n:reservations" as routerReservations
' participant "<<controllers>>\n:reservations" as controllersReservations
' participant "<<model>>\n:Reservation" as modelReservation
' database "<<MongoDB>>\n:reservations" as ReservationDatabase

' client->server ++:req.get('/reservations/:id')
' server->routerReservations ++:app.use('/reservations',reservations)
' routerReservations -> controllersReservations ++:getReservation()
' controllersReservations->modelReservation ++:findById(req.params.id)
' modelReservation ->ReservationDatabase ++: ReservationSchema
' ReservationDatabase --> modelReservation --: reservation
' controllersReservations <-- modelReservation --:reservation
' controllersReservations->client --:response

' @enduml


' @startuml Manage Reservation (ADD)

' header Sameple VacQ Sequence Diagram
' footer Page %page% of %lastpage%
' title "Manage Reservations (ADD)"

' participant "Client" as client
' participant "<<javaScript>>\n:server" as server
' participant "<<router>>\n:reservations" as routerReservations
' participant "<<controllers>>\n:reservations" as controllersReservations
' participant "<<model>>\n:Reservation" as modelReservation
' database "<<MongoDB>>\n:reservations" as ReservationDatabase

' client->server ++:req.post('/reservations')
' server->routerReservations ++:app.use('/reservations',reservations)
' routerReservations -> controllersReservations ++:addReservation()
' controllersReservations->modelReservation ++:create(req.body)
' modelReservation ->ReservationDatabase ++: ReservationSchema
' ReservationDatabase --> modelReservation --: reservation
' controllersReservations <-- modelReservation --:reservation
' controllersReservations->client --:response

' @enduml


' @startuml Manage Reservation (UPDATE)

' header Sameple VacQ Sequence Diagram
' footer Page %page% of %lastpage%
' title "Manage Reservations (UPDATE)"

' participant "Client" as client
' participant "<<javaScript>>\n:server" as server
' participant "<<router>>\n:reservations" as routerReservations
' participant "<<controllers>>\n:reservations" as controllersReservations
' participant "<<model>>\n:Reservation" as modelReservation
' database "<<MongoDB>>\n:reservations" as ReservationDatabase

' client->server ++:req.put('/reservations/:id')
' server->routerReservations ++:app.use('/reservations',reservations)
' routerReservations -> controllersReservations ++:updateReservation()
' controllersReservations->modelReservation ++:findByIdAndUpdate(req.params.id, req.body)
' modelReservation ->ReservationDatabase ++: ReservationSchema
' ReservationDatabase --> modelReservation --: reservation
' controllersReservations <-- modelReservation --:reservation
' controllersReservations->client --:response

' @enduml


@startuml Manage Reservation (DELETE)

header Sameple VacQ Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Reservations (DELETE)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:reservations" as routerReservations
participant "<<controllers>>\n:reservations" as controllersReservations
participant "<<model>>\n:Reservation" as modelReservation
database "<<MongoDB>>\n:reservations" as ReservationDatabase

client->server ++:req.delete('/reservations/:id')
server->routerReservations ++:app.use('/reservations',reservations)
routerReservations -> controllersReservations ++:deleteReservation()
controllersReservations->modelReservation ++:findById(req.params.id)
modelReservation -->ReservationDatabase ++: ReservationSchema
controllersReservations->client --:response

@enduml

